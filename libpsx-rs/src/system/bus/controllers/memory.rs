use crate::system::types::State;
use crate::system::bus::types::*;

pub fn bus_read_u8(state: &State, address: u32) -> ReadResult<u8> {
    match address {
        0x0000_0000..=0x001F_FFFF => crate::system::memory::controllers::memory::main_memory_read_u8(state, address - 0x0000_0000),
        0x0020_0000..=0x003F_FFFF => crate::system::memory::controllers::memory::main_memory_read_u8(state, address - 0x0020_0000),
        0x0040_0000..=0x005F_FFFF => crate::system::memory::controllers::memory::main_memory_read_u8(state, address - 0x0040_0000),
        0x0060_0000..=0x007F_FFFF => crate::system::memory::controllers::memory::main_memory_read_u8(state, address - 0x0060_0000),
        0x1F00_0000..=0x1F00_00FF => crate::system::memory::controllers::memory::pio_read_u8(state, address - 0x1F00_0000),
        0x1F80_1040..=0x1F80_1043 => crate::system::padmc::controllers::memory::padmc1040_read_u8(state, address - 0x1F80_1040),
        0x1F80_1800..=0x1F80_1800 => crate::system::cdrom::controllers::memory::status_read_u8(state, address - 0x1F80_1800),
        0x1F80_1801..=0x1F80_1801 => crate::system::cdrom::controllers::memory::cdrom1801_read_u8(state, address - 0x1F80_1801),
        0x1F80_1802..=0x1F80_1802 => crate::system::cdrom::controllers::memory::cdrom1802_read_u8(state, address - 0x1F80_1802),
        0x1F80_1803..=0x1F80_1803 => crate::system::cdrom::controllers::memory::cdrom1803_read_u8(state, address - 0x1F80_1803),
        0x1F80_2041..=0x1F80_2041 => crate::system::memory::controllers::memory::post_display_read_u8(state, address - 0x1F80_2041),
        0x1FC0_0000..=0x1FC7_FFFF => crate::system::memory::controllers::memory::bios_read_u8(state, address - 0x1FC0_0000),
        0xFFFE_0000..=0xFFFF_FFFF => crate::system::memory::controllers::memory::cache_control_read_u8(state, address - 0xFFFE_0000),
        _ => panic!("Unhandled bus address 0x{:08X}", address),
    }
}

pub fn bus_write_u8(state: &State, address: u32, value: u8) -> WriteResult {
    match address {
        0x0000_0000..=0x001F_FFFF => crate::system::memory::controllers::memory::main_memory_write_u8(state, address - 0x0000_0000, value),
        0x0020_0000..=0x003F_FFFF => crate::system::memory::controllers::memory::main_memory_write_u8(state, address - 0x0020_0000, value),
        0x0040_0000..=0x005F_FFFF => crate::system::memory::controllers::memory::main_memory_write_u8(state, address - 0x0040_0000, value),
        0x0060_0000..=0x007F_FFFF => crate::system::memory::controllers::memory::main_memory_write_u8(state, address - 0x0060_0000, value),
        0x1F00_0000..=0x1F00_00FF => crate::system::memory::controllers::memory::pio_write_u8(state, address - 0x1F00_0000, value),
        0x1F80_1040..=0x1F80_1043 => crate::system::padmc::controllers::memory::padmc1040_write_u8(state, address - 0x1F80_1040, value),
        0x1F80_1800..=0x1F80_1800 => crate::system::cdrom::controllers::memory::status_write_u8(state, address - 0x1F80_1800, value),
        0x1F80_1801..=0x1F80_1801 => crate::system::cdrom::controllers::memory::cdrom1801_write_u8(state, address - 0x1F80_1801, value),
        0x1F80_1802..=0x1F80_1802 => crate::system::cdrom::controllers::memory::cdrom1802_write_u8(state, address - 0x1F80_1802, value),
        0x1F80_1803..=0x1F80_1803 => crate::system::cdrom::controllers::memory::cdrom1803_write_u8(state, address - 0x1F80_1803, value),
        0x1F80_2041..=0x1F80_2041 => crate::system::memory::controllers::memory::post_display_write_u8(state, address - 0x1F80_2041, value),
        0x1FC0_0000..=0x1FC7_FFFF => crate::system::memory::controllers::memory::bios_write_u8(state, address - 0x1FC0_0000, value),
        0xFFFE_0000..=0xFFFF_FFFF => crate::system::memory::controllers::memory::cache_control_write_u8(state, address - 0xFFFE_0000, value),
        _ => panic!("Unhandled bus address 0x{:08X}", address),
    }
}

pub fn bus_read_u16(state: &State, address: u32) -> ReadResult<u16> {
    match address {
        0x0000_0000..=0x001F_FFFF => crate::system::memory::controllers::memory::main_memory_read_u16(state, address - 0x0000_0000),
        0x0020_0000..=0x003F_FFFF => crate::system::memory::controllers::memory::main_memory_read_u16(state, address - 0x0020_0000),
        0x0040_0000..=0x005F_FFFF => crate::system::memory::controllers::memory::main_memory_read_u16(state, address - 0x0040_0000),
        0x0060_0000..=0x007F_FFFF => crate::system::memory::controllers::memory::main_memory_read_u16(state, address - 0x0060_0000),
        0x1F00_0000..=0x1F00_00FF => crate::system::memory::controllers::memory::pio_read_u16(state, address - 0x1F00_0000),
        0x1F80_1048..=0x1F80_1049 => crate::system::padmc::controllers::memory::mode_read_u16(state, address - 0x1F80_1048),
        0x1F80_104A..=0x1F80_104B => crate::system::padmc::controllers::memory::ctrl_read_u16(state, address - 0x1F80_104A),
        0x1F80_104E..=0x1F80_104F => crate::system::padmc::controllers::memory::baud_reload_read_u16(state, address - 0x1F80_104E),
        0x1F80_1070..=0x1F80_1073 => crate::system::intc::controllers::memory::stat_read_u16(state, address - 0x1F80_1070),
        0x1F80_1074..=0x1F80_1077 => crate::system::intc::controllers::memory::mask_read_u16(state, address - 0x1F80_1074),
        0x1F80_1100..=0x1F80_1103 => crate::system::timers::controllers::memory::count_read_u16(state, address - 0x1F80_1100, ((address - 0x1F80_1100) / 0x10) as usize),
        0x1F80_1104..=0x1F80_1107 => crate::system::timers::controllers::memory::mode_read_u16(state, address - 0x1F80_1104, ((address - 0x1F80_1104) / 0x10) as usize),
        0x1F80_1108..=0x1F80_110B => crate::system::timers::controllers::memory::target_read_u16(state, address - 0x1F80_1108, ((address - 0x1F80_1108) / 0x10) as usize),
        0x1F80_1110..=0x1F80_1113 => crate::system::timers::controllers::memory::count_read_u16(state, address - 0x1F80_1110, ((address - 0x1F80_1100) / 0x10) as usize),
        0x1F80_1114..=0x1F80_1117 => crate::system::timers::controllers::memory::mode_read_u16(state, address - 0x1F80_1114, ((address - 0x1F80_1104) / 0x10) as usize),
        0x1F80_1118..=0x1F80_111B => crate::system::timers::controllers::memory::target_read_u16(state, address - 0x1F80_1118, ((address - 0x1F80_1108) / 0x10) as usize),
        0x1F80_1120..=0x1F80_1123 => crate::system::timers::controllers::memory::count_read_u16(state, address - 0x1F80_1120, ((address - 0x1F80_1100) / 0x10) as usize),
        0x1F80_1124..=0x1F80_1127 => crate::system::timers::controllers::memory::mode_read_u16(state, address - 0x1F80_1124, ((address - 0x1F80_1104) / 0x10) as usize),
        0x1F80_1128..=0x1F80_112B => crate::system::timers::controllers::memory::target_read_u16(state, address - 0x1F80_1128, ((address - 0x1F80_1108) / 0x10) as usize),
        0x1F80_1C00..=0x1F80_1C01 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1C00, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1C02..=0x1F80_1C03 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1C02, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1C04..=0x1F80_1C05 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1C04, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1C06..=0x1F80_1C07 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1C06, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1C08..=0x1F80_1C0B => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1C08, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1C0C..=0x1F80_1C0D => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1C0C, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1C0E..=0x1F80_1C0F => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1C0E, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1C10..=0x1F80_1C11 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1C10, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1C12..=0x1F80_1C13 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1C12, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1C14..=0x1F80_1C15 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1C14, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1C16..=0x1F80_1C17 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1C16, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1C18..=0x1F80_1C1B => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1C18, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1C1C..=0x1F80_1C1D => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1C1C, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1C1E..=0x1F80_1C1F => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1C1E, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1C20..=0x1F80_1C21 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1C20, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1C22..=0x1F80_1C23 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1C22, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1C24..=0x1F80_1C25 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1C24, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1C26..=0x1F80_1C27 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1C26, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1C28..=0x1F80_1C2B => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1C28, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1C2C..=0x1F80_1C2D => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1C2C, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1C2E..=0x1F80_1C2F => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1C2E, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1C30..=0x1F80_1C31 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1C30, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1C32..=0x1F80_1C33 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1C32, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1C34..=0x1F80_1C35 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1C34, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1C36..=0x1F80_1C37 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1C36, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1C38..=0x1F80_1C3B => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1C38, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1C3C..=0x1F80_1C3D => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1C3C, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1C3E..=0x1F80_1C3F => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1C3E, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1C40..=0x1F80_1C41 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1C40, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1C42..=0x1F80_1C43 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1C42, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1C44..=0x1F80_1C45 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1C44, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1C46..=0x1F80_1C47 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1C46, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1C48..=0x1F80_1C4B => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1C48, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1C4C..=0x1F80_1C4D => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1C4C, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1C4E..=0x1F80_1C4F => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1C4E, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1C50..=0x1F80_1C51 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1C50, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1C52..=0x1F80_1C53 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1C52, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1C54..=0x1F80_1C55 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1C54, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1C56..=0x1F80_1C57 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1C56, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1C58..=0x1F80_1C5B => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1C58, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1C5C..=0x1F80_1C5D => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1C5C, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1C5E..=0x1F80_1C5F => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1C5E, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1C60..=0x1F80_1C61 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1C60, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1C62..=0x1F80_1C63 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1C62, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1C64..=0x1F80_1C65 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1C64, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1C66..=0x1F80_1C67 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1C66, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1C68..=0x1F80_1C6B => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1C68, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1C6C..=0x1F80_1C6D => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1C6C, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1C6E..=0x1F80_1C6F => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1C6E, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1C70..=0x1F80_1C71 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1C70, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1C72..=0x1F80_1C73 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1C72, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1C74..=0x1F80_1C75 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1C74, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1C76..=0x1F80_1C77 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1C76, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1C78..=0x1F80_1C7B => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1C78, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1C7C..=0x1F80_1C7D => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1C7C, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1C7E..=0x1F80_1C7F => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1C7E, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1C80..=0x1F80_1C81 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1C80, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1C82..=0x1F80_1C83 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1C82, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1C84..=0x1F80_1C85 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1C84, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1C86..=0x1F80_1C87 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1C86, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1C88..=0x1F80_1C8B => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1C88, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1C8C..=0x1F80_1C8D => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1C8C, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1C8E..=0x1F80_1C8F => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1C8E, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1C90..=0x1F80_1C91 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1C90, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1C92..=0x1F80_1C93 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1C92, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1C94..=0x1F80_1C95 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1C94, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1C96..=0x1F80_1C97 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1C96, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1C98..=0x1F80_1C9B => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1C98, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1C9C..=0x1F80_1C9D => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1C9C, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1C9E..=0x1F80_1C9F => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1C9E, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1CA0..=0x1F80_1CA1 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1CA0, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1CA2..=0x1F80_1CA3 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1CA2, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1CA4..=0x1F80_1CA5 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1CA4, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1CA6..=0x1F80_1CA7 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1CA6, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1CA8..=0x1F80_1CAB => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1CA8, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1CAC..=0x1F80_1CAD => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1CAC, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1CAE..=0x1F80_1CAF => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1CAE, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1CB0..=0x1F80_1CB1 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1CB0, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1CB2..=0x1F80_1CB3 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1CB2, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1CB4..=0x1F80_1CB5 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1CB4, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1CB6..=0x1F80_1CB7 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1CB6, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1CB8..=0x1F80_1CBB => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1CB8, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1CBC..=0x1F80_1CBD => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1CBC, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1CBE..=0x1F80_1CBF => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1CBE, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1CC0..=0x1F80_1CC1 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1CC0, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1CC2..=0x1F80_1CC3 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1CC2, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1CC4..=0x1F80_1CC5 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1CC4, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1CC6..=0x1F80_1CC7 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1CC6, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1CC8..=0x1F80_1CCB => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1CC8, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1CCC..=0x1F80_1CCD => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1CCC, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1CCE..=0x1F80_1CCF => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1CCE, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1CD0..=0x1F80_1CD1 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1CD0, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1CD2..=0x1F80_1CD3 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1CD2, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1CD4..=0x1F80_1CD5 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1CD4, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1CD6..=0x1F80_1CD7 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1CD6, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1CD8..=0x1F80_1CDB => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1CD8, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1CDC..=0x1F80_1CDD => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1CDC, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1CDE..=0x1F80_1CDF => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1CDE, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1CE0..=0x1F80_1CE1 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1CE0, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1CE2..=0x1F80_1CE3 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1CE2, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1CE4..=0x1F80_1CE5 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1CE4, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1CE6..=0x1F80_1CE7 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1CE6, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1CE8..=0x1F80_1CEB => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1CE8, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1CEC..=0x1F80_1CED => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1CEC, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1CEE..=0x1F80_1CEF => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1CEE, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1CF0..=0x1F80_1CF1 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1CF0, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1CF2..=0x1F80_1CF3 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1CF2, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1CF4..=0x1F80_1CF5 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1CF4, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1CF6..=0x1F80_1CF7 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1CF6, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1CF8..=0x1F80_1CFB => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1CF8, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1CFC..=0x1F80_1CFD => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1CFC, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1CFE..=0x1F80_1CFF => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1CFE, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1D00..=0x1F80_1D01 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1D00, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1D02..=0x1F80_1D03 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1D02, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1D04..=0x1F80_1D05 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1D04, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1D06..=0x1F80_1D07 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1D06, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1D08..=0x1F80_1D0B => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1D08, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1D0C..=0x1F80_1D0D => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1D0C, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1D0E..=0x1F80_1D0F => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1D0E, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1D10..=0x1F80_1D11 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1D10, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1D12..=0x1F80_1D13 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1D12, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1D14..=0x1F80_1D15 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1D14, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1D16..=0x1F80_1D17 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1D16, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1D18..=0x1F80_1D1B => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1D18, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1D1C..=0x1F80_1D1D => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1D1C, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1D1E..=0x1F80_1D1F => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1D1E, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1D20..=0x1F80_1D21 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1D20, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1D22..=0x1F80_1D23 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1D22, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1D24..=0x1F80_1D25 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1D24, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1D26..=0x1F80_1D27 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1D26, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1D28..=0x1F80_1D2B => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1D28, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1D2C..=0x1F80_1D2D => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1D2C, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1D2E..=0x1F80_1D2F => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1D2E, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1D30..=0x1F80_1D31 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1D30, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1D32..=0x1F80_1D33 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1D32, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1D34..=0x1F80_1D35 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1D34, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1D36..=0x1F80_1D37 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1D36, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1D38..=0x1F80_1D3B => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1D38, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1D3C..=0x1F80_1D3D => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1D3C, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1D3E..=0x1F80_1D3F => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1D3E, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1D40..=0x1F80_1D41 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1D40, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1D42..=0x1F80_1D43 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1D42, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1D44..=0x1F80_1D45 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1D44, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1D46..=0x1F80_1D47 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1D46, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1D48..=0x1F80_1D4B => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1D48, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1D4C..=0x1F80_1D4D => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1D4C, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1D4E..=0x1F80_1D4F => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1D4E, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1D50..=0x1F80_1D51 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1D50, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1D52..=0x1F80_1D53 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1D52, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1D54..=0x1F80_1D55 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1D54, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1D56..=0x1F80_1D57 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1D56, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1D58..=0x1F80_1D5B => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1D58, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1D5C..=0x1F80_1D5D => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1D5C, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1D5E..=0x1F80_1D5F => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1D5E, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1D60..=0x1F80_1D61 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1D60, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1D62..=0x1F80_1D63 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1D62, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1D64..=0x1F80_1D65 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1D64, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1D66..=0x1F80_1D67 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1D66, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1D68..=0x1F80_1D6B => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1D68, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1D6C..=0x1F80_1D6D => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1D6C, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1D6E..=0x1F80_1D6F => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1D6E, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1D70..=0x1F80_1D71 => crate::system::spu::controllers::memory::voice_voll_read_u16(state, address - 0x1F80_1D70, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1D72..=0x1F80_1D73 => crate::system::spu::controllers::memory::voice_volr_read_u16(state, address - 0x1F80_1D72, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1D74..=0x1F80_1D75 => crate::system::spu::controllers::memory::voice_srate_read_u16(state, address - 0x1F80_1D74, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1D76..=0x1F80_1D77 => crate::system::spu::controllers::memory::voice_saddr_read_u16(state, address - 0x1F80_1D76, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1D78..=0x1F80_1D7B => crate::system::spu::controllers::memory::voice_adsr_read_u16(state, address - 0x1F80_1D78, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1D7C..=0x1F80_1D7D => crate::system::spu::controllers::memory::voice_cvol_read_u16(state, address - 0x1F80_1D7C, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1D7E..=0x1F80_1D7F => crate::system::spu::controllers::memory::voice_raddr_read_u16(state, address - 0x1F80_1D7E, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1D80..=0x1F80_1D81 => crate::system::spu::controllers::memory::main_volume_left_read_u16(state, address - 0x1F80_1D80),
        0x1F80_1D82..=0x1F80_1D83 => crate::system::spu::controllers::memory::main_volume_right_read_u16(state, address - 0x1F80_1D82),
        0x1F80_1D88..=0x1F80_1D8B => crate::system::spu::controllers::memory::voice_key_on_read_u16(state, address - 0x1F80_1D88),
        0x1F80_1D8C..=0x1F80_1D8F => crate::system::spu::controllers::memory::voice_key_off_read_u16(state, address - 0x1F80_1D8C),
        0x1F80_1DA0..=0x1F80_1DA1 => crate::system::spu::controllers::memory::unknown_0_read_u16(state, address - 0x1F80_1DA0),
        0x1F80_1DA2..=0x1F80_1DA3 => crate::system::spu::controllers::memory::reverb_start_address_read_u16(state, address - 0x1F80_1DA2),
        0x1F80_1DA4..=0x1F80_1DA5 => crate::system::spu::controllers::memory::irq_address_read_u16(state, address - 0x1F80_1DA4),
        0x1F80_1DA6..=0x1F80_1DA7 => crate::system::spu::controllers::memory::data_transfer_address_read_u16(state, address - 0x1F80_1DA6),
        0x1F80_1DA8..=0x1F80_1DA9 => crate::system::spu::controllers::memory::data_fifo_read_u16(state, address - 0x1F80_1DA8),
        0x1F80_1DAA..=0x1F80_1DAB => crate::system::spu::controllers::memory::control_read_u16(state, address - 0x1F80_1DAA),
        0x1F80_1DAC..=0x1F80_1DAD => crate::system::spu::controllers::memory::data_transfer_control_read_u16(state, address - 0x1F80_1DAC),
        0x1F80_1DAE..=0x1F80_1DAF => crate::system::spu::controllers::memory::stat_read_u16(state, address - 0x1F80_1DAE),
        0x1F80_1DB8..=0x1F80_1DB9 => crate::system::spu::controllers::memory::current_volume_left_read_u16(state, address - 0x1F80_1DB8),
        0x1F80_1DBA..=0x1F80_1DBB => crate::system::spu::controllers::memory::current_volume_right_read_u16(state, address - 0x1F80_1DBA),
        0x1F80_1DC0..=0x1F80_1DC1 => crate::system::spu::controllers::memory::dapf1_read_u16(state, address - 0x1F80_1DC0),
        0x1F80_1DC2..=0x1F80_1DC3 => crate::system::spu::controllers::memory::dapf2_read_u16(state, address - 0x1F80_1DC2),
        0x1F80_1DC4..=0x1F80_1DC5 => crate::system::spu::controllers::memory::viir_read_u16(state, address - 0x1F80_1DC4),
        0x1F80_1DC6..=0x1F80_1DC7 => crate::system::spu::controllers::memory::vcomb1_read_u16(state, address - 0x1F80_1DC6),
        0x1F80_1DC8..=0x1F80_1DC9 => crate::system::spu::controllers::memory::vcomb2_read_u16(state, address - 0x1F80_1DC8),
        0x1F80_1DCA..=0x1F80_1DCB => crate::system::spu::controllers::memory::vcomb3_read_u16(state, address - 0x1F80_1DCA),
        0x1F80_1DCC..=0x1F80_1DCD => crate::system::spu::controllers::memory::vcomb4_read_u16(state, address - 0x1F80_1DCC),
        0x1F80_1DCE..=0x1F80_1DCF => crate::system::spu::controllers::memory::vwall_read_u16(state, address - 0x1F80_1DCE),
        0x1F80_1DD0..=0x1F80_1DD1 => crate::system::spu::controllers::memory::vapf1_read_u16(state, address - 0x1F80_1DD0),
        0x1F80_1DD2..=0x1F80_1DD3 => crate::system::spu::controllers::memory::vapf2_read_u16(state, address - 0x1F80_1DD2),
        0x1FC0_0000..=0x1FC7_FFFF => crate::system::memory::controllers::memory::bios_read_u16(state, address - 0x1FC0_0000),
        0xFFFE_0000..=0xFFFF_FFFF => crate::system::memory::controllers::memory::cache_control_read_u16(state, address - 0xFFFE_0000),
        _ => panic!("Unhandled bus address 0x{:08X}", address),
    }
}

pub fn bus_write_u16(state: &State, address: u32, value: u16) -> WriteResult {
    match address {
        0x0000_0000..=0x001F_FFFF => crate::system::memory::controllers::memory::main_memory_write_u16(state, address - 0x0000_0000, value),
        0x0020_0000..=0x003F_FFFF => crate::system::memory::controllers::memory::main_memory_write_u16(state, address - 0x0020_0000, value),
        0x0040_0000..=0x005F_FFFF => crate::system::memory::controllers::memory::main_memory_write_u16(state, address - 0x0040_0000, value),
        0x0060_0000..=0x007F_FFFF => crate::system::memory::controllers::memory::main_memory_write_u16(state, address - 0x0060_0000, value),
        0x1F00_0000..=0x1F00_00FF => crate::system::memory::controllers::memory::pio_write_u16(state, address - 0x1F00_0000, value),
        0x1F80_1048..=0x1F80_1049 => crate::system::padmc::controllers::memory::mode_write_u16(state, address - 0x1F80_1048, value),
        0x1F80_104A..=0x1F80_104B => crate::system::padmc::controllers::memory::ctrl_write_u16(state, address - 0x1F80_104A, value),
        0x1F80_104E..=0x1F80_104F => crate::system::padmc::controllers::memory::baud_reload_write_u16(state, address - 0x1F80_104E, value),
        0x1F80_1070..=0x1F80_1073 => crate::system::intc::controllers::memory::stat_write_u16(state, address - 0x1F80_1070, value),
        0x1F80_1074..=0x1F80_1077 => crate::system::intc::controllers::memory::mask_write_u16(state, address - 0x1F80_1074, value),
        0x1F80_1100..=0x1F80_1103 => crate::system::timers::controllers::memory::count_write_u16(state, address - 0x1F80_1100, value, ((address - 0x1F80_1100) / 0x10) as usize),
        0x1F80_1104..=0x1F80_1107 => crate::system::timers::controllers::memory::mode_write_u16(state, address - 0x1F80_1104, value, ((address - 0x1F80_1104) / 0x10) as usize),
        0x1F80_1108..=0x1F80_110B => crate::system::timers::controllers::memory::target_write_u16(state, address - 0x1F80_1108, value, ((address - 0x1F80_1108) / 0x10) as usize),
        0x1F80_1110..=0x1F80_1113 => crate::system::timers::controllers::memory::count_write_u16(state, address - 0x1F80_1110, value, ((address - 0x1F80_1100) / 0x10) as usize),
        0x1F80_1114..=0x1F80_1117 => crate::system::timers::controllers::memory::mode_write_u16(state, address - 0x1F80_1114, value, ((address - 0x1F80_1104) / 0x10) as usize),
        0x1F80_1118..=0x1F80_111B => crate::system::timers::controllers::memory::target_write_u16(state, address - 0x1F80_1118, value, ((address - 0x1F80_1108) / 0x10) as usize),
        0x1F80_1120..=0x1F80_1123 => crate::system::timers::controllers::memory::count_write_u16(state, address - 0x1F80_1120, value, ((address - 0x1F80_1100) / 0x10) as usize),
        0x1F80_1124..=0x1F80_1127 => crate::system::timers::controllers::memory::mode_write_u16(state, address - 0x1F80_1124, value, ((address - 0x1F80_1104) / 0x10) as usize),
        0x1F80_1128..=0x1F80_112B => crate::system::timers::controllers::memory::target_write_u16(state, address - 0x1F80_1128, value, ((address - 0x1F80_1108) / 0x10) as usize),
        0x1F80_1C00..=0x1F80_1C01 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1C00, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1C02..=0x1F80_1C03 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1C02, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1C04..=0x1F80_1C05 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1C04, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1C06..=0x1F80_1C07 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1C06, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1C08..=0x1F80_1C0B => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1C08, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1C0C..=0x1F80_1C0D => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1C0C, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1C0E..=0x1F80_1C0F => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1C0E, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1C10..=0x1F80_1C11 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1C10, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1C12..=0x1F80_1C13 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1C12, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1C14..=0x1F80_1C15 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1C14, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1C16..=0x1F80_1C17 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1C16, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1C18..=0x1F80_1C1B => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1C18, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1C1C..=0x1F80_1C1D => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1C1C, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1C1E..=0x1F80_1C1F => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1C1E, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1C20..=0x1F80_1C21 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1C20, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1C22..=0x1F80_1C23 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1C22, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1C24..=0x1F80_1C25 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1C24, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1C26..=0x1F80_1C27 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1C26, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1C28..=0x1F80_1C2B => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1C28, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1C2C..=0x1F80_1C2D => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1C2C, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1C2E..=0x1F80_1C2F => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1C2E, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1C30..=0x1F80_1C31 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1C30, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1C32..=0x1F80_1C33 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1C32, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1C34..=0x1F80_1C35 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1C34, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1C36..=0x1F80_1C37 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1C36, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1C38..=0x1F80_1C3B => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1C38, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1C3C..=0x1F80_1C3D => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1C3C, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1C3E..=0x1F80_1C3F => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1C3E, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1C40..=0x1F80_1C41 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1C40, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1C42..=0x1F80_1C43 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1C42, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1C44..=0x1F80_1C45 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1C44, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1C46..=0x1F80_1C47 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1C46, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1C48..=0x1F80_1C4B => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1C48, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1C4C..=0x1F80_1C4D => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1C4C, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1C4E..=0x1F80_1C4F => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1C4E, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1C50..=0x1F80_1C51 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1C50, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1C52..=0x1F80_1C53 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1C52, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1C54..=0x1F80_1C55 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1C54, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1C56..=0x1F80_1C57 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1C56, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1C58..=0x1F80_1C5B => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1C58, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1C5C..=0x1F80_1C5D => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1C5C, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1C5E..=0x1F80_1C5F => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1C5E, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1C60..=0x1F80_1C61 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1C60, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1C62..=0x1F80_1C63 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1C62, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1C64..=0x1F80_1C65 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1C64, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1C66..=0x1F80_1C67 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1C66, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1C68..=0x1F80_1C6B => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1C68, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1C6C..=0x1F80_1C6D => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1C6C, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1C6E..=0x1F80_1C6F => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1C6E, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1C70..=0x1F80_1C71 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1C70, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1C72..=0x1F80_1C73 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1C72, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1C74..=0x1F80_1C75 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1C74, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1C76..=0x1F80_1C77 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1C76, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1C78..=0x1F80_1C7B => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1C78, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1C7C..=0x1F80_1C7D => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1C7C, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1C7E..=0x1F80_1C7F => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1C7E, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1C80..=0x1F80_1C81 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1C80, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1C82..=0x1F80_1C83 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1C82, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1C84..=0x1F80_1C85 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1C84, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1C86..=0x1F80_1C87 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1C86, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1C88..=0x1F80_1C8B => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1C88, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1C8C..=0x1F80_1C8D => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1C8C, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1C8E..=0x1F80_1C8F => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1C8E, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1C90..=0x1F80_1C91 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1C90, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1C92..=0x1F80_1C93 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1C92, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1C94..=0x1F80_1C95 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1C94, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1C96..=0x1F80_1C97 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1C96, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1C98..=0x1F80_1C9B => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1C98, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1C9C..=0x1F80_1C9D => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1C9C, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1C9E..=0x1F80_1C9F => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1C9E, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1CA0..=0x1F80_1CA1 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1CA0, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1CA2..=0x1F80_1CA3 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1CA2, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1CA4..=0x1F80_1CA5 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1CA4, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1CA6..=0x1F80_1CA7 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1CA6, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1CA8..=0x1F80_1CAB => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1CA8, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1CAC..=0x1F80_1CAD => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1CAC, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1CAE..=0x1F80_1CAF => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1CAE, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1CB0..=0x1F80_1CB1 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1CB0, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1CB2..=0x1F80_1CB3 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1CB2, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1CB4..=0x1F80_1CB5 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1CB4, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1CB6..=0x1F80_1CB7 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1CB6, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1CB8..=0x1F80_1CBB => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1CB8, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1CBC..=0x1F80_1CBD => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1CBC, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1CBE..=0x1F80_1CBF => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1CBE, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1CC0..=0x1F80_1CC1 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1CC0, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1CC2..=0x1F80_1CC3 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1CC2, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1CC4..=0x1F80_1CC5 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1CC4, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1CC6..=0x1F80_1CC7 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1CC6, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1CC8..=0x1F80_1CCB => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1CC8, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1CCC..=0x1F80_1CCD => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1CCC, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1CCE..=0x1F80_1CCF => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1CCE, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1CD0..=0x1F80_1CD1 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1CD0, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1CD2..=0x1F80_1CD3 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1CD2, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1CD4..=0x1F80_1CD5 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1CD4, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1CD6..=0x1F80_1CD7 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1CD6, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1CD8..=0x1F80_1CDB => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1CD8, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1CDC..=0x1F80_1CDD => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1CDC, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1CDE..=0x1F80_1CDF => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1CDE, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1CE0..=0x1F80_1CE1 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1CE0, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1CE2..=0x1F80_1CE3 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1CE2, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1CE4..=0x1F80_1CE5 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1CE4, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1CE6..=0x1F80_1CE7 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1CE6, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1CE8..=0x1F80_1CEB => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1CE8, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1CEC..=0x1F80_1CED => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1CEC, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1CEE..=0x1F80_1CEF => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1CEE, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1CF0..=0x1F80_1CF1 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1CF0, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1CF2..=0x1F80_1CF3 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1CF2, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1CF4..=0x1F80_1CF5 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1CF4, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1CF6..=0x1F80_1CF7 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1CF6, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1CF8..=0x1F80_1CFB => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1CF8, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1CFC..=0x1F80_1CFD => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1CFC, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1CFE..=0x1F80_1CFF => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1CFE, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1D00..=0x1F80_1D01 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1D00, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1D02..=0x1F80_1D03 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1D02, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1D04..=0x1F80_1D05 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1D04, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1D06..=0x1F80_1D07 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1D06, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1D08..=0x1F80_1D0B => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1D08, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1D0C..=0x1F80_1D0D => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1D0C, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1D0E..=0x1F80_1D0F => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1D0E, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1D10..=0x1F80_1D11 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1D10, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1D12..=0x1F80_1D13 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1D12, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1D14..=0x1F80_1D15 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1D14, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1D16..=0x1F80_1D17 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1D16, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1D18..=0x1F80_1D1B => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1D18, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1D1C..=0x1F80_1D1D => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1D1C, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1D1E..=0x1F80_1D1F => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1D1E, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1D20..=0x1F80_1D21 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1D20, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1D22..=0x1F80_1D23 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1D22, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1D24..=0x1F80_1D25 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1D24, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1D26..=0x1F80_1D27 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1D26, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1D28..=0x1F80_1D2B => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1D28, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1D2C..=0x1F80_1D2D => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1D2C, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1D2E..=0x1F80_1D2F => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1D2E, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1D30..=0x1F80_1D31 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1D30, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1D32..=0x1F80_1D33 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1D32, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1D34..=0x1F80_1D35 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1D34, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1D36..=0x1F80_1D37 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1D36, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1D38..=0x1F80_1D3B => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1D38, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1D3C..=0x1F80_1D3D => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1D3C, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1D3E..=0x1F80_1D3F => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1D3E, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1D40..=0x1F80_1D41 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1D40, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1D42..=0x1F80_1D43 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1D42, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1D44..=0x1F80_1D45 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1D44, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1D46..=0x1F80_1D47 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1D46, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1D48..=0x1F80_1D4B => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1D48, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1D4C..=0x1F80_1D4D => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1D4C, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1D4E..=0x1F80_1D4F => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1D4E, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1D50..=0x1F80_1D51 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1D50, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1D52..=0x1F80_1D53 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1D52, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1D54..=0x1F80_1D55 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1D54, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1D56..=0x1F80_1D57 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1D56, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1D58..=0x1F80_1D5B => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1D58, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1D5C..=0x1F80_1D5D => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1D5C, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1D5E..=0x1F80_1D5F => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1D5E, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1D60..=0x1F80_1D61 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1D60, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1D62..=0x1F80_1D63 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1D62, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1D64..=0x1F80_1D65 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1D64, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1D66..=0x1F80_1D67 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1D66, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1D68..=0x1F80_1D6B => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1D68, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1D6C..=0x1F80_1D6D => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1D6C, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1D6E..=0x1F80_1D6F => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1D6E, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1D70..=0x1F80_1D71 => crate::system::spu::controllers::memory::voice_voll_write_u16(state, address - 0x1F80_1D70, value, ((address - 0x1F80_1C00) / 0x10) as usize),
        0x1F80_1D72..=0x1F80_1D73 => crate::system::spu::controllers::memory::voice_volr_write_u16(state, address - 0x1F80_1D72, value, ((address - 0x1F80_1C02) / 0x10) as usize),
        0x1F80_1D74..=0x1F80_1D75 => crate::system::spu::controllers::memory::voice_srate_write_u16(state, address - 0x1F80_1D74, value, ((address - 0x1F80_1C04) / 0x10) as usize),
        0x1F80_1D76..=0x1F80_1D77 => crate::system::spu::controllers::memory::voice_saddr_write_u16(state, address - 0x1F80_1D76, value, ((address - 0x1F80_1C06) / 0x10) as usize),
        0x1F80_1D78..=0x1F80_1D7B => crate::system::spu::controllers::memory::voice_adsr_write_u16(state, address - 0x1F80_1D78, value, ((address - 0x1F80_1C08) / 0x10) as usize),
        0x1F80_1D7C..=0x1F80_1D7D => crate::system::spu::controllers::memory::voice_cvol_write_u16(state, address - 0x1F80_1D7C, value, ((address - 0x1F80_1C0C) / 0x10) as usize),
        0x1F80_1D7E..=0x1F80_1D7F => crate::system::spu::controllers::memory::voice_raddr_write_u16(state, address - 0x1F80_1D7E, value, ((address - 0x1F80_1C0E) / 0x10) as usize),
        0x1F80_1D80..=0x1F80_1D81 => crate::system::spu::controllers::memory::main_volume_left_write_u16(state, address - 0x1F80_1D80, value),
        0x1F80_1D82..=0x1F80_1D83 => crate::system::spu::controllers::memory::main_volume_right_write_u16(state, address - 0x1F80_1D82, value),
        0x1F80_1D88..=0x1F80_1D8B => crate::system::spu::controllers::memory::voice_key_on_write_u16(state, address - 0x1F80_1D88, value),
        0x1F80_1D8C..=0x1F80_1D8F => crate::system::spu::controllers::memory::voice_key_off_write_u16(state, address - 0x1F80_1D8C, value),
        0x1F80_1DA0..=0x1F80_1DA1 => crate::system::spu::controllers::memory::unknown_0_write_u16(state, address - 0x1F80_1DA0, value),
        0x1F80_1DA2..=0x1F80_1DA3 => crate::system::spu::controllers::memory::reverb_start_address_write_u16(state, address - 0x1F80_1DA2, value),
        0x1F80_1DA4..=0x1F80_1DA5 => crate::system::spu::controllers::memory::irq_address_write_u16(state, address - 0x1F80_1DA4, value),
        0x1F80_1DA6..=0x1F80_1DA7 => crate::system::spu::controllers::memory::data_transfer_address_write_u16(state, address - 0x1F80_1DA6, value),
        0x1F80_1DA8..=0x1F80_1DA9 => crate::system::spu::controllers::memory::data_fifo_write_u16(state, address - 0x1F80_1DA8, value),
        0x1F80_1DAA..=0x1F80_1DAB => crate::system::spu::controllers::memory::control_write_u16(state, address - 0x1F80_1DAA, value),
        0x1F80_1DAC..=0x1F80_1DAD => crate::system::spu::controllers::memory::data_transfer_control_write_u16(state, address - 0x1F80_1DAC, value),
        0x1F80_1DAE..=0x1F80_1DAF => crate::system::spu::controllers::memory::stat_write_u16(state, address - 0x1F80_1DAE, value),
        0x1F80_1DB8..=0x1F80_1DB9 => crate::system::spu::controllers::memory::current_volume_left_write_u16(state, address - 0x1F80_1DB8, value),
        0x1F80_1DBA..=0x1F80_1DBB => crate::system::spu::controllers::memory::current_volume_right_write_u16(state, address - 0x1F80_1DBA, value),
        0x1F80_1DC0..=0x1F80_1DC1 => crate::system::spu::controllers::memory::dapf1_write_u16(state, address - 0x1F80_1DC0, value),
        0x1F80_1DC2..=0x1F80_1DC3 => crate::system::spu::controllers::memory::dapf2_write_u16(state, address - 0x1F80_1DC2, value),
        0x1F80_1DC4..=0x1F80_1DC5 => crate::system::spu::controllers::memory::viir_write_u16(state, address - 0x1F80_1DC4, value),
        0x1F80_1DC6..=0x1F80_1DC7 => crate::system::spu::controllers::memory::vcomb1_write_u16(state, address - 0x1F80_1DC6, value),
        0x1F80_1DC8..=0x1F80_1DC9 => crate::system::spu::controllers::memory::vcomb2_write_u16(state, address - 0x1F80_1DC8, value),
        0x1F80_1DCA..=0x1F80_1DCB => crate::system::spu::controllers::memory::vcomb3_write_u16(state, address - 0x1F80_1DCA, value),
        0x1F80_1DCC..=0x1F80_1DCD => crate::system::spu::controllers::memory::vcomb4_write_u16(state, address - 0x1F80_1DCC, value),
        0x1F80_1DCE..=0x1F80_1DCF => crate::system::spu::controllers::memory::vwall_write_u16(state, address - 0x1F80_1DCE, value),
        0x1F80_1DD0..=0x1F80_1DD1 => crate::system::spu::controllers::memory::vapf1_write_u16(state, address - 0x1F80_1DD0, value),
        0x1F80_1DD2..=0x1F80_1DD3 => crate::system::spu::controllers::memory::vapf2_write_u16(state, address - 0x1F80_1DD2, value),
        0x1FC0_0000..=0x1FC7_FFFF => crate::system::memory::controllers::memory::bios_write_u16(state, address - 0x1FC0_0000, value),
        0xFFFE_0000..=0xFFFF_FFFF => crate::system::memory::controllers::memory::cache_control_write_u16(state, address - 0xFFFE_0000, value),
        _ => panic!("Unhandled bus address 0x{:08X}", address),
    }
}

pub fn bus_read_u32(state: &State, address: u32) -> ReadResult<u32> {
    match address {
        0x0000_0000..=0x001F_FFFF => crate::system::memory::controllers::memory::main_memory_read_u32(state, address - 0x0000_0000),
        0x0020_0000..=0x003F_FFFF => crate::system::memory::controllers::memory::main_memory_read_u32(state, address - 0x0020_0000),
        0x0040_0000..=0x005F_FFFF => crate::system::memory::controllers::memory::main_memory_read_u32(state, address - 0x0040_0000),
        0x0060_0000..=0x007F_FFFF => crate::system::memory::controllers::memory::main_memory_read_u32(state, address - 0x0060_0000),
        0x1F00_0000..=0x1F00_00FF => crate::system::memory::controllers::memory::pio_read_u32(state, address - 0x1F00_0000),
        0x1F80_1000..=0x1F80_1003 => crate::system::memory::controllers::memory::expansion_1_base_address_read_u32(state, address - 0x1F80_1000),
        0x1F80_1004..=0x1F80_1007 => crate::system::memory::controllers::memory::expansion_2_base_address_read_u32(state, address - 0x1F80_1004),
        0x1F80_1008..=0x1F80_100B => crate::system::memory::controllers::memory::expansion_1_delay_read_u32(state, address - 0x1F80_1008),
        0x1F80_100C..=0x1F80_100F => crate::system::memory::controllers::memory::expansion_3_delay_read_u32(state, address - 0x1F80_100C),
        0x1F80_1010..=0x1F80_1013 => crate::system::memory::controllers::memory::bios_rom_control_read_u32(state, address - 0x1F80_1010),
        0x1F80_1014..=0x1F80_1017 => crate::system::memory::controllers::memory::spu_delay_read_u32(state, address - 0x1F80_1014),
        0x1F80_1018..=0x1F80_101B => crate::system::memory::controllers::memory::cdrom_delay_read_u32(state, address - 0x1F80_1018),
        0x1F80_101C..=0x1F80_101F => crate::system::memory::controllers::memory::expansion_2_delay_read_u32(state, address - 0x1F80_101C),
        0x1F80_1020..=0x1F80_1023 => crate::system::memory::controllers::memory::common_delay_control_read_u32(state, address - 0x1F80_1020),
        0x1F80_1040..=0x1F80_1043 => crate::system::padmc::controllers::memory::padmc1040_read_u32(state, address - 0x1F80_1040),
        0x1F80_1044..=0x1F80_1047 => crate::system::padmc::controllers::memory::stat_read_u32(state, address - 0x1F80_1044),
        0x1F80_1060..=0x1F80_1063 => crate::system::memory::controllers::memory::ram_size_control_read_u32(state, address - 0x1F80_1060),
        0x1F80_1070..=0x1F80_1073 => crate::system::intc::controllers::memory::stat_read_u32(state, address - 0x1F80_1070),
        0x1F80_1074..=0x1F80_1077 => crate::system::intc::controllers::memory::mask_read_u32(state, address - 0x1F80_1074),
        0x1F80_1080..=0x1F80_1083 => crate::system::dmac::controllers::memory::madr_read_u32(state, address - 0x1F80_1080, ((address - 0x1F80_1080) / 0x10) as usize),
        0x1F80_1084..=0x1F80_1087 => crate::system::dmac::controllers::memory::bcr_read_u32(state, address - 0x1F80_1084, ((address - 0x1F80_1084) / 0x10) as usize),
        0x1F80_1088..=0x1F80_108B => crate::system::dmac::controllers::memory::chcr_read_u32(state, address - 0x1F80_1088, ((address - 0x1F80_1088) / 0x10) as usize),
        0x1F80_1090..=0x1F80_1093 => crate::system::dmac::controllers::memory::madr_read_u32(state, address - 0x1F80_1090, ((address - 0x1F80_1080) / 0x10) as usize),
        0x1F80_1094..=0x1F80_1097 => crate::system::dmac::controllers::memory::bcr_read_u32(state, address - 0x1F80_1094, ((address - 0x1F80_1084) / 0x10) as usize),
        0x1F80_1098..=0x1F80_109B => crate::system::dmac::controllers::memory::chcr_read_u32(state, address - 0x1F80_1098, ((address - 0x1F80_1088) / 0x10) as usize),
        0x1F80_10A0..=0x1F80_10A3 => crate::system::dmac::controllers::memory::madr_read_u32(state, address - 0x1F80_10A0, ((address - 0x1F80_1080) / 0x10) as usize),
        0x1F80_10A4..=0x1F80_10A7 => crate::system::dmac::controllers::memory::bcr_read_u32(state, address - 0x1F80_10A4, ((address - 0x1F80_1084) / 0x10) as usize),
        0x1F80_10A8..=0x1F80_10AB => crate::system::dmac::controllers::memory::chcr_read_u32(state, address - 0x1F80_10A8, ((address - 0x1F80_1088) / 0x10) as usize),
        0x1F80_10B0..=0x1F80_10B3 => crate::system::dmac::controllers::memory::madr_read_u32(state, address - 0x1F80_10B0, ((address - 0x1F80_1080) / 0x10) as usize),
        0x1F80_10B4..=0x1F80_10B7 => crate::system::dmac::controllers::memory::bcr_read_u32(state, address - 0x1F80_10B4, ((address - 0x1F80_1084) / 0x10) as usize),
        0x1F80_10B8..=0x1F80_10BB => crate::system::dmac::controllers::memory::chcr_read_u32(state, address - 0x1F80_10B8, ((address - 0x1F80_1088) / 0x10) as usize),
        0x1F80_10C0..=0x1F80_10C3 => crate::system::dmac::controllers::memory::madr_read_u32(state, address - 0x1F80_10C0, ((address - 0x1F80_1080) / 0x10) as usize),
        0x1F80_10C4..=0x1F80_10C7 => crate::system::dmac::controllers::memory::bcr_read_u32(state, address - 0x1F80_10C4, ((address - 0x1F80_1084) / 0x10) as usize),
        0x1F80_10C8..=0x1F80_10CB => crate::system::dmac::controllers::memory::chcr_read_u32(state, address - 0x1F80_10C8, ((address - 0x1F80_1088) / 0x10) as usize),
        0x1F80_10D0..=0x1F80_10D3 => crate::system::dmac::controllers::memory::madr_read_u32(state, address - 0x1F80_10D0, ((address - 0x1F80_1080) / 0x10) as usize),
        0x1F80_10D4..=0x1F80_10D7 => crate::system::dmac::controllers::memory::bcr_read_u32(state, address - 0x1F80_10D4, ((address - 0x1F80_1084) / 0x10) as usize),
        0x1F80_10D8..=0x1F80_10DB => crate::system::dmac::controllers::memory::chcr_read_u32(state, address - 0x1F80_10D8, ((address - 0x1F80_1088) / 0x10) as usize),
        0x1F80_10E0..=0x1F80_10E3 => crate::system::dmac::controllers::memory::madr_read_u32(state, address - 0x1F80_10E0, ((address - 0x1F80_1080) / 0x10) as usize),
        0x1F80_10E4..=0x1F80_10E7 => crate::system::dmac::controllers::memory::bcr_read_u32(state, address - 0x1F80_10E4, ((address - 0x1F80_1084) / 0x10) as usize),
        0x1F80_10E8..=0x1F80_10EB => crate::system::dmac::controllers::memory::chcr_read_u32(state, address - 0x1F80_10E8, ((address - 0x1F80_1088) / 0x10) as usize),
        0x1F80_10F0..=0x1F80_10F3 => crate::system::dmac::controllers::memory::dpcr_read_u32(state, address - 0x1F80_10F0),
        0x1F80_10F4..=0x1F80_10F7 => crate::system::dmac::controllers::memory::dicr_read_u32(state, address - 0x1F80_10F4),
        0x1F80_1100..=0x1F80_1103 => crate::system::timers::controllers::memory::count_read_u32(state, address - 0x1F80_1100, ((address - 0x1F80_1100) / 0x10) as usize),
        0x1F80_1104..=0x1F80_1107 => crate::system::timers::controllers::memory::mode_read_u32(state, address - 0x1F80_1104, ((address - 0x1F80_1104) / 0x10) as usize),
        0x1F80_1108..=0x1F80_110B => crate::system::timers::controllers::memory::target_read_u32(state, address - 0x1F80_1108, ((address - 0x1F80_1108) / 0x10) as usize),
        0x1F80_1110..=0x1F80_1113 => crate::system::timers::controllers::memory::count_read_u32(state, address - 0x1F80_1110, ((address - 0x1F80_1100) / 0x10) as usize),
        0x1F80_1114..=0x1F80_1117 => crate::system::timers::controllers::memory::mode_read_u32(state, address - 0x1F80_1114, ((address - 0x1F80_1104) / 0x10) as usize),
        0x1F80_1118..=0x1F80_111B => crate::system::timers::controllers::memory::target_read_u32(state, address - 0x1F80_1118, ((address - 0x1F80_1108) / 0x10) as usize),
        0x1F80_1120..=0x1F80_1123 => crate::system::timers::controllers::memory::count_read_u32(state, address - 0x1F80_1120, ((address - 0x1F80_1100) / 0x10) as usize),
        0x1F80_1124..=0x1F80_1127 => crate::system::timers::controllers::memory::mode_read_u32(state, address - 0x1F80_1124, ((address - 0x1F80_1104) / 0x10) as usize),
        0x1F80_1128..=0x1F80_112B => crate::system::timers::controllers::memory::target_read_u32(state, address - 0x1F80_1128, ((address - 0x1F80_1108) / 0x10) as usize),
        0x1F80_1810..=0x1F80_1813 => crate::system::gpu::controllers::memory::gpu1810_read_u32(state, address - 0x1F80_1810),
        0x1F80_1814..=0x1F80_1817 => crate::system::gpu::controllers::memory::gpu1814_read_u32(state, address - 0x1F80_1814),
        0x1F80_1D84..=0x1F80_1D87 => crate::system::spu::controllers::memory::reverb_volume_read_u32(state, address - 0x1F80_1D84),
        0x1F80_1D88..=0x1F80_1D8B => crate::system::spu::controllers::memory::voice_key_on_read_u32(state, address - 0x1F80_1D88),
        0x1F80_1D8C..=0x1F80_1D8F => crate::system::spu::controllers::memory::voice_key_off_read_u32(state, address - 0x1F80_1D8C),
        0x1F80_1D90..=0x1F80_1D93 => crate::system::spu::controllers::memory::voice_channel_fm_read_u32(state, address - 0x1F80_1D90),
        0x1F80_1D94..=0x1F80_1D97 => crate::system::spu::controllers::memory::voice_channel_noise_read_u32(state, address - 0x1F80_1D94),
        0x1F80_1D98..=0x1F80_1D9B => crate::system::spu::controllers::memory::voice_channel_reverb_read_u32(state, address - 0x1F80_1D98),
        0x1F80_1D9C..=0x1F80_1D9F => crate::system::spu::controllers::memory::voice_channel_status_read_u32(state, address - 0x1F80_1D9C),
        0x1F80_1DB0..=0x1F80_1DB3 => crate::system::spu::controllers::memory::cd_volume_read_u32(state, address - 0x1F80_1DB0),
        0x1F80_1DB4..=0x1F80_1DB7 => crate::system::spu::controllers::memory::extern_volume_read_u32(state, address - 0x1F80_1DB4),
        0x1F80_1DBC..=0x1F80_1DBF => crate::system::spu::controllers::memory::unknown_1_read_u32(state, address - 0x1F80_1DBC),
        0x1F80_1DD4..=0x1F80_1DD7 => crate::system::spu::controllers::memory::msame_read_u32(state, address - 0x1F80_1DD4),
        0x1F80_1DD8..=0x1F80_1DDB => crate::system::spu::controllers::memory::mcomb1_read_u32(state, address - 0x1F80_1DD8),
        0x1F80_1DDC..=0x1F80_1DDF => crate::system::spu::controllers::memory::mcomb2_read_u32(state, address - 0x1F80_1DDC),
        0x1F80_1DE0..=0x1F80_1DE3 => crate::system::spu::controllers::memory::dsame_read_u32(state, address - 0x1F80_1DE0),
        0x1F80_1DE4..=0x1F80_1DE7 => crate::system::spu::controllers::memory::mdiff_read_u32(state, address - 0x1F80_1DE4),
        0x1F80_1DE8..=0x1F80_1DEB => crate::system::spu::controllers::memory::mcomb3_read_u32(state, address - 0x1F80_1DE8),
        0x1F80_1DEC..=0x1F80_1DEF => crate::system::spu::controllers::memory::mcomb4_read_u32(state, address - 0x1F80_1DEC),
        0x1F80_1DF0..=0x1F80_1DF3 => crate::system::spu::controllers::memory::ddiff_read_u32(state, address - 0x1F80_1DF0),
        0x1F80_1DF4..=0x1F80_1DF7 => crate::system::spu::controllers::memory::mapf1_read_u32(state, address - 0x1F80_1DF4),
        0x1F80_1DF8..=0x1F80_1DFB => crate::system::spu::controllers::memory::mapf2_read_u32(state, address - 0x1F80_1DF8),
        0x1F80_1DFC..=0x1F80_1DFF => crate::system::spu::controllers::memory::vin_read_u32(state, address - 0x1F80_1DFC),
        0x1FC0_0000..=0x1FC7_FFFF => crate::system::memory::controllers::memory::bios_read_u32(state, address - 0x1FC0_0000),
        0xFFFE_0000..=0xFFFF_FFFF => crate::system::memory::controllers::memory::cache_control_read_u32(state, address - 0xFFFE_0000),
        _ => panic!("Unhandled bus address 0x{:08X}", address),
    }
}

pub fn bus_write_u32(state: &State, address: u32, value: u32) -> WriteResult {
    match address {
        0x0000_0000..=0x001F_FFFF => crate::system::memory::controllers::memory::main_memory_write_u32(state, address - 0x0000_0000, value),
        0x0020_0000..=0x003F_FFFF => crate::system::memory::controllers::memory::main_memory_write_u32(state, address - 0x0020_0000, value),
        0x0040_0000..=0x005F_FFFF => crate::system::memory::controllers::memory::main_memory_write_u32(state, address - 0x0040_0000, value),
        0x0060_0000..=0x007F_FFFF => crate::system::memory::controllers::memory::main_memory_write_u32(state, address - 0x0060_0000, value),
        0x1F00_0000..=0x1F00_00FF => crate::system::memory::controllers::memory::pio_write_u32(state, address - 0x1F00_0000, value),
        0x1F80_1000..=0x1F80_1003 => crate::system::memory::controllers::memory::expansion_1_base_address_write_u32(state, address - 0x1F80_1000, value),
        0x1F80_1004..=0x1F80_1007 => crate::system::memory::controllers::memory::expansion_2_base_address_write_u32(state, address - 0x1F80_1004, value),
        0x1F80_1008..=0x1F80_100B => crate::system::memory::controllers::memory::expansion_1_delay_write_u32(state, address - 0x1F80_1008, value),
        0x1F80_100C..=0x1F80_100F => crate::system::memory::controllers::memory::expansion_3_delay_write_u32(state, address - 0x1F80_100C, value),
        0x1F80_1010..=0x1F80_1013 => crate::system::memory::controllers::memory::bios_rom_control_write_u32(state, address - 0x1F80_1010, value),
        0x1F80_1014..=0x1F80_1017 => crate::system::memory::controllers::memory::spu_delay_write_u32(state, address - 0x1F80_1014, value),
        0x1F80_1018..=0x1F80_101B => crate::system::memory::controllers::memory::cdrom_delay_write_u32(state, address - 0x1F80_1018, value),
        0x1F80_101C..=0x1F80_101F => crate::system::memory::controllers::memory::expansion_2_delay_write_u32(state, address - 0x1F80_101C, value),
        0x1F80_1020..=0x1F80_1023 => crate::system::memory::controllers::memory::common_delay_control_write_u32(state, address - 0x1F80_1020, value),
        0x1F80_1040..=0x1F80_1043 => crate::system::padmc::controllers::memory::padmc1040_write_u32(state, address - 0x1F80_1040, value),
        0x1F80_1044..=0x1F80_1047 => crate::system::padmc::controllers::memory::stat_write_u32(state, address - 0x1F80_1044, value),
        0x1F80_1060..=0x1F80_1063 => crate::system::memory::controllers::memory::ram_size_control_write_u32(state, address - 0x1F80_1060, value),
        0x1F80_1070..=0x1F80_1073 => crate::system::intc::controllers::memory::stat_write_u32(state, address - 0x1F80_1070, value),
        0x1F80_1074..=0x1F80_1077 => crate::system::intc::controllers::memory::mask_write_u32(state, address - 0x1F80_1074, value),
        0x1F80_1080..=0x1F80_1083 => crate::system::dmac::controllers::memory::madr_write_u32(state, address - 0x1F80_1080, value, ((address - 0x1F80_1080) / 0x10) as usize),
        0x1F80_1084..=0x1F80_1087 => crate::system::dmac::controllers::memory::bcr_write_u32(state, address - 0x1F80_1084, value, ((address - 0x1F80_1084) / 0x10) as usize),
        0x1F80_1088..=0x1F80_108B => crate::system::dmac::controllers::memory::chcr_write_u32(state, address - 0x1F80_1088, value, ((address - 0x1F80_1088) / 0x10) as usize),
        0x1F80_1090..=0x1F80_1093 => crate::system::dmac::controllers::memory::madr_write_u32(state, address - 0x1F80_1090, value, ((address - 0x1F80_1080) / 0x10) as usize),
        0x1F80_1094..=0x1F80_1097 => crate::system::dmac::controllers::memory::bcr_write_u32(state, address - 0x1F80_1094, value, ((address - 0x1F80_1084) / 0x10) as usize),
        0x1F80_1098..=0x1F80_109B => crate::system::dmac::controllers::memory::chcr_write_u32(state, address - 0x1F80_1098, value, ((address - 0x1F80_1088) / 0x10) as usize),
        0x1F80_10A0..=0x1F80_10A3 => crate::system::dmac::controllers::memory::madr_write_u32(state, address - 0x1F80_10A0, value, ((address - 0x1F80_1080) / 0x10) as usize),
        0x1F80_10A4..=0x1F80_10A7 => crate::system::dmac::controllers::memory::bcr_write_u32(state, address - 0x1F80_10A4, value, ((address - 0x1F80_1084) / 0x10) as usize),
        0x1F80_10A8..=0x1F80_10AB => crate::system::dmac::controllers::memory::chcr_write_u32(state, address - 0x1F80_10A8, value, ((address - 0x1F80_1088) / 0x10) as usize),
        0x1F80_10B0..=0x1F80_10B3 => crate::system::dmac::controllers::memory::madr_write_u32(state, address - 0x1F80_10B0, value, ((address - 0x1F80_1080) / 0x10) as usize),
        0x1F80_10B4..=0x1F80_10B7 => crate::system::dmac::controllers::memory::bcr_write_u32(state, address - 0x1F80_10B4, value, ((address - 0x1F80_1084) / 0x10) as usize),
        0x1F80_10B8..=0x1F80_10BB => crate::system::dmac::controllers::memory::chcr_write_u32(state, address - 0x1F80_10B8, value, ((address - 0x1F80_1088) / 0x10) as usize),
        0x1F80_10C0..=0x1F80_10C3 => crate::system::dmac::controllers::memory::madr_write_u32(state, address - 0x1F80_10C0, value, ((address - 0x1F80_1080) / 0x10) as usize),
        0x1F80_10C4..=0x1F80_10C7 => crate::system::dmac::controllers::memory::bcr_write_u32(state, address - 0x1F80_10C4, value, ((address - 0x1F80_1084) / 0x10) as usize),
        0x1F80_10C8..=0x1F80_10CB => crate::system::dmac::controllers::memory::chcr_write_u32(state, address - 0x1F80_10C8, value, ((address - 0x1F80_1088) / 0x10) as usize),
        0x1F80_10D0..=0x1F80_10D3 => crate::system::dmac::controllers::memory::madr_write_u32(state, address - 0x1F80_10D0, value, ((address - 0x1F80_1080) / 0x10) as usize),
        0x1F80_10D4..=0x1F80_10D7 => crate::system::dmac::controllers::memory::bcr_write_u32(state, address - 0x1F80_10D4, value, ((address - 0x1F80_1084) / 0x10) as usize),
        0x1F80_10D8..=0x1F80_10DB => crate::system::dmac::controllers::memory::chcr_write_u32(state, address - 0x1F80_10D8, value, ((address - 0x1F80_1088) / 0x10) as usize),
        0x1F80_10E0..=0x1F80_10E3 => crate::system::dmac::controllers::memory::madr_write_u32(state, address - 0x1F80_10E0, value, ((address - 0x1F80_1080) / 0x10) as usize),
        0x1F80_10E4..=0x1F80_10E7 => crate::system::dmac::controllers::memory::bcr_write_u32(state, address - 0x1F80_10E4, value, ((address - 0x1F80_1084) / 0x10) as usize),
        0x1F80_10E8..=0x1F80_10EB => crate::system::dmac::controllers::memory::chcr_write_u32(state, address - 0x1F80_10E8, value, ((address - 0x1F80_1088) / 0x10) as usize),
        0x1F80_10F0..=0x1F80_10F3 => crate::system::dmac::controllers::memory::dpcr_write_u32(state, address - 0x1F80_10F0, value),
        0x1F80_10F4..=0x1F80_10F7 => crate::system::dmac::controllers::memory::dicr_write_u32(state, address - 0x1F80_10F4, value),
        0x1F80_1100..=0x1F80_1103 => crate::system::timers::controllers::memory::count_write_u32(state, address - 0x1F80_1100, value, ((address - 0x1F80_1100) / 0x10) as usize),
        0x1F80_1104..=0x1F80_1107 => crate::system::timers::controllers::memory::mode_write_u32(state, address - 0x1F80_1104, value, ((address - 0x1F80_1104) / 0x10) as usize),
        0x1F80_1108..=0x1F80_110B => crate::system::timers::controllers::memory::target_write_u32(state, address - 0x1F80_1108, value, ((address - 0x1F80_1108) / 0x10) as usize),
        0x1F80_1110..=0x1F80_1113 => crate::system::timers::controllers::memory::count_write_u32(state, address - 0x1F80_1110, value, ((address - 0x1F80_1100) / 0x10) as usize),
        0x1F80_1114..=0x1F80_1117 => crate::system::timers::controllers::memory::mode_write_u32(state, address - 0x1F80_1114, value, ((address - 0x1F80_1104) / 0x10) as usize),
        0x1F80_1118..=0x1F80_111B => crate::system::timers::controllers::memory::target_write_u32(state, address - 0x1F80_1118, value, ((address - 0x1F80_1108) / 0x10) as usize),
        0x1F80_1120..=0x1F80_1123 => crate::system::timers::controllers::memory::count_write_u32(state, address - 0x1F80_1120, value, ((address - 0x1F80_1100) / 0x10) as usize),
        0x1F80_1124..=0x1F80_1127 => crate::system::timers::controllers::memory::mode_write_u32(state, address - 0x1F80_1124, value, ((address - 0x1F80_1104) / 0x10) as usize),
        0x1F80_1128..=0x1F80_112B => crate::system::timers::controllers::memory::target_write_u32(state, address - 0x1F80_1128, value, ((address - 0x1F80_1108) / 0x10) as usize),
        0x1F80_1810..=0x1F80_1813 => crate::system::gpu::controllers::memory::gpu1810_write_u32(state, address - 0x1F80_1810, value),
        0x1F80_1814..=0x1F80_1817 => crate::system::gpu::controllers::memory::gpu1814_write_u32(state, address - 0x1F80_1814, value),
        0x1F80_1D84..=0x1F80_1D87 => crate::system::spu::controllers::memory::reverb_volume_write_u32(state, address - 0x1F80_1D84, value),
        0x1F80_1D88..=0x1F80_1D8B => crate::system::spu::controllers::memory::voice_key_on_write_u32(state, address - 0x1F80_1D88, value),
        0x1F80_1D8C..=0x1F80_1D8F => crate::system::spu::controllers::memory::voice_key_off_write_u32(state, address - 0x1F80_1D8C, value),
        0x1F80_1D90..=0x1F80_1D93 => crate::system::spu::controllers::memory::voice_channel_fm_write_u32(state, address - 0x1F80_1D90, value),
        0x1F80_1D94..=0x1F80_1D97 => crate::system::spu::controllers::memory::voice_channel_noise_write_u32(state, address - 0x1F80_1D94, value),
        0x1F80_1D98..=0x1F80_1D9B => crate::system::spu::controllers::memory::voice_channel_reverb_write_u32(state, address - 0x1F80_1D98, value),
        0x1F80_1D9C..=0x1F80_1D9F => crate::system::spu::controllers::memory::voice_channel_status_write_u32(state, address - 0x1F80_1D9C, value),
        0x1F80_1DB0..=0x1F80_1DB3 => crate::system::spu::controllers::memory::cd_volume_write_u32(state, address - 0x1F80_1DB0, value),
        0x1F80_1DB4..=0x1F80_1DB7 => crate::system::spu::controllers::memory::extern_volume_write_u32(state, address - 0x1F80_1DB4, value),
        0x1F80_1DBC..=0x1F80_1DBF => crate::system::spu::controllers::memory::unknown_1_write_u32(state, address - 0x1F80_1DBC, value),
        0x1F80_1DD4..=0x1F80_1DD7 => crate::system::spu::controllers::memory::msame_write_u32(state, address - 0x1F80_1DD4, value),
        0x1F80_1DD8..=0x1F80_1DDB => crate::system::spu::controllers::memory::mcomb1_write_u32(state, address - 0x1F80_1DD8, value),
        0x1F80_1DDC..=0x1F80_1DDF => crate::system::spu::controllers::memory::mcomb2_write_u32(state, address - 0x1F80_1DDC, value),
        0x1F80_1DE0..=0x1F80_1DE3 => crate::system::spu::controllers::memory::dsame_write_u32(state, address - 0x1F80_1DE0, value),
        0x1F80_1DE4..=0x1F80_1DE7 => crate::system::spu::controllers::memory::mdiff_write_u32(state, address - 0x1F80_1DE4, value),
        0x1F80_1DE8..=0x1F80_1DEB => crate::system::spu::controllers::memory::mcomb3_write_u32(state, address - 0x1F80_1DE8, value),
        0x1F80_1DEC..=0x1F80_1DEF => crate::system::spu::controllers::memory::mcomb4_write_u32(state, address - 0x1F80_1DEC, value),
        0x1F80_1DF0..=0x1F80_1DF3 => crate::system::spu::controllers::memory::ddiff_write_u32(state, address - 0x1F80_1DF0, value),
        0x1F80_1DF4..=0x1F80_1DF7 => crate::system::spu::controllers::memory::mapf1_write_u32(state, address - 0x1F80_1DF4, value),
        0x1F80_1DF8..=0x1F80_1DFB => crate::system::spu::controllers::memory::mapf2_write_u32(state, address - 0x1F80_1DF8, value),
        0x1F80_1DFC..=0x1F80_1DFF => crate::system::spu::controllers::memory::vin_write_u32(state, address - 0x1F80_1DFC, value),
        0x1FC0_0000..=0x1FC7_FFFF => crate::system::memory::controllers::memory::bios_write_u32(state, address - 0x1FC0_0000, value),
        0xFFFE_0000..=0xFFFF_FFFF => crate::system::memory::controllers::memory::cache_control_write_u32(state, address - 0xFFFE_0000, value),
        _ => panic!("Unhandled bus address 0x{:08X}", address),
    }
}
